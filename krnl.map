
分配公共符号
公共符号            大小              文件

idt_ptr             0x6               kernel/global.o
task_stack          0x38000           kernel/global.o
k_reenter           0x4               kernel/global.o
gdt                 0x400             kernel/global.o
tty_table           0xc30             kernel/global.o
tss                 0x68              kernel/global.o
nr_current_console  0x4               kernel/global.o
disp_pos            0x4               kernel/global.o
gdt_ptr             0x6               kernel/global.o
idt                 0x800             kernel/global.o
PARTITION_ENTRY     0x10              kernel/hd.o
ticks               0x4               kernel/global.o
console_table       0x30              kernel/global.o
irq_table           0x40              kernel/global.o
p_proc_ready        0x4               kernel/global.o
proc_table          0x428             kernel/global.o

舍弃的输入节

 .group         0x0000000000000000        0x8 kernel/start.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/start.o
 .group         0x0000000000000000        0x8 kernel/main.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 kernel/main.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/main.o
 .group         0x0000000000000000        0x8 kernel/clock.o
 .group         0x0000000000000000        0x8 kernel/clock.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 kernel/clock.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/clock.o
 .group         0x0000000000000000        0x8 kernel/keyboard.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 kernel/keyboard.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/keyboard.o
 .group         0x0000000000000000        0x8 kernel/tty.o
 .group         0x0000000000000000        0x8 kernel/tty.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 kernel/tty.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 kernel/tty.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/tty.o
 .group         0x0000000000000000        0x8 kernel/console.o
 .group         0x0000000000000000        0x8 kernel/console.o
 .group         0x0000000000000000        0x8 kernel/console.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 kernel/console.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 kernel/console.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/console.o
 .group         0x0000000000000000        0x8 kernel/i8259.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 kernel/i8259.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/i8259.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/global.o
 .group         0x0000000000000000        0x8 kernel/protect.o
 .group         0x0000000000000000        0x8 kernel/protect.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 kernel/protect.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 kernel/protect.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/protect.o
 .group         0x0000000000000000        0x8 kernel/proc.o
 .group         0x0000000000000000        0x8 kernel/proc.o
 .group         0x0000000000000000        0x8 kernel/proc.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 kernel/proc.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 kernel/proc.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/proc.o
 .group         0x0000000000000000        0x8 kernel/systask.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 kernel/systask.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/systask.o
 .group         0x0000000000000000        0x8 kernel/hd.o
 .group         0x0000000000000000        0x8 kernel/hd.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 kernel/hd.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 kernel/hd.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/hd.o
 .group         0x0000000000000000        0x8 kernel/printf.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 kernel/printf.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/printf.o
 .group         0x0000000000000000        0x8 kernel/vsprintf.o
 .group         0x0000000000000000        0x8 kernel/vsprintf.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 kernel/vsprintf.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 kernel/vsprintf.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/vsprintf.o
 .group         0x0000000000000000        0x8 lib/klib.o
 .group         0x0000000000000000        0x8 lib/klib.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 lib/klib.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 lib/klib.o
 .note.GNU-stack
                0x0000000000000000        0x0 lib/klib.o
 .group         0x0000000000000000        0x8 lib/misc.o
 .group         0x0000000000000000        0x8 lib/misc.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 lib/misc.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 lib/misc.o
 .note.GNU-stack
                0x0000000000000000        0x0 lib/misc.o
 .group         0x0000000000000000        0x8 fs/main.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 fs/main.o
 .note.GNU-stack
                0x0000000000000000        0x0 fs/main.o

内存配置

名称           来源             长度             属性
*default*        0x0000000000000000 0xffffffffffffffff

链结器命令稿和内存映射

段 .text 的地址设置为 0x30400
LOAD kernel/kernel.o
LOAD kernel/syscall.o
LOAD kernel/start.o
LOAD kernel/main.o
LOAD kernel/clock.o
LOAD kernel/keyboard.o
LOAD kernel/tty.o
LOAD kernel/console.o
LOAD kernel/i8259.o
LOAD kernel/global.o
LOAD kernel/protect.o
LOAD kernel/proc.o
LOAD kernel/systask.o
LOAD kernel/hd.o
LOAD kernel/printf.o
LOAD kernel/vsprintf.o
LOAD lib/kliba.o
LOAD lib/klib.o
LOAD lib/string.o
LOAD lib/misc.o
LOAD fs/main.o
                [!provide]                        PROVIDE (__executable_start = SEGMENT_START ("text-segment", 0x8048000))
                0x0000000008048094                . = (SEGMENT_START ("text-segment", 0x8048000) + SIZEOF_HEADERS)

.interp
 *(.interp)

.note.gnu.build-id
 *(.note.gnu.build-id)

.hash
 *(.hash)

.gnu.hash
 *(.gnu.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.dyn        0x0000000008048094        0x0
 *(.rel.init)
 *(.rel.text .rel.text.* .rel.gnu.linkonce.t.*)
 .rel.text      0x0000000008048094        0x0 kernel/kernel.o
 *(.rel.fini)
 *(.rel.rodata .rel.rodata.* .rel.gnu.linkonce.r.*)
 *(.rel.data.rel.ro .rel.data.rel.ro.* .rel.gnu.linkonce.d.rel.ro.*)
 *(.rel.data .rel.data.* .rel.gnu.linkonce.d.*)
 *(.rel.tdata .rel.tdata.* .rel.gnu.linkonce.td.*)
 *(.rel.tbss .rel.tbss.* .rel.gnu.linkonce.tb.*)
 *(.rel.ctors)
 *(.rel.dtors)
 *(.rel.got)
 .rel.got       0x0000000008048094        0x0 kernel/kernel.o
 *(.rel.bss .rel.bss.* .rel.gnu.linkonce.b.*)
 *(.rel.ifunc)

.rel.plt        0x0000000008048094        0x0
 *(.rel.plt)
                [!provide]                        PROVIDE (__rel_iplt_start = .)
 *(.rel.iplt)
 .rel.iplt      0x0000000008048094        0x0 kernel/kernel.o
                [!provide]                        PROVIDE (__rel_iplt_end = .)

.init
 *(SORT_NONE(.init))

.plt            0x0000000008048098        0x0
 *(.plt)
 *(.iplt)
 .iplt          0x0000000008048098        0x0 kernel/kernel.o

.plt.got
 *(.plt.got)

.plt.sec
 *(.plt.sec)

.text           0x0000000000030400     0x50e2
 *(.text.unlikely .text.*_unlikely .text.unlikely.*)
 *(.text.exit .text.exit.*)
 *(.text.startup .text.startup.*)
 *(.text.hot .text.hot.*)
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x0000000000030400      0x410 kernel/kernel.o
                0x0000000000030400                _start
                0x0000000000030440                hwint00
                0x0000000000030470                hwint01
                0x00000000000304a0                hwint02
                0x00000000000304d0                hwint03
                0x0000000000030500                hwint04
                0x0000000000030530                hwint05
                0x0000000000030560                hwint06
                0x0000000000030590                hwint07
                0x00000000000305c0                hwint08
                0x00000000000305f0                hwint09
                0x0000000000030620                hwint10
                0x0000000000030650                hwint11
                0x0000000000030680                hwint12
                0x00000000000306b0                hwint13
                0x00000000000306e0                hwint14
                0x0000000000030710                hwint15
                0x0000000000030734                divide_error
                0x000000000003073a                single_step_exception
                0x0000000000030740                nmi
                0x0000000000030746                breakpoint_exception
                0x000000000003074c                overflow
                0x0000000000030752                bounds_check
                0x0000000000030758                inval_opcode
                0x000000000003075e                copr_not_available
                0x0000000000030764                double_fault
                0x0000000000030768                copr_seg_overrun
                0x000000000003076e                inval_tss
                0x0000000000030772                segment_not_present
                0x0000000000030776                stack_exception
                0x000000000003077a                general_protection
                0x000000000003077e                page_fault
                0x0000000000030782                copr_error
                0x00000000000307cb                sys_call
                0x00000000000307eb                restart
 .text          0x0000000000030810       0x20 kernel/syscall.o
                0x0000000000030810                sendrec
                0x0000000000030824                printx
 .text          0x0000000000030830       0xc3 kernel/start.o
                0x0000000000030830                cstart
 .text.__x86.get_pc_thunk.bx
                0x00000000000308f3        0x4 kernel/start.o
                0x00000000000308f3                __x86.get_pc_thunk.bx
 .text          0x00000000000308f7      0x429 kernel/main.o
                0x00000000000308f7                kernel_main
                0x0000000000030bde                TestA
                0x0000000000030c1a                TestB
                0x0000000000030c50                TestC
                0x0000000000030c86                get_ticks
                0x0000000000030cc9                panic
 .text          0x0000000000030d20      0x116 kernel/clock.o
                0x0000000000030d20                clock_handler
                0x0000000000030d83                milli_delay
                0x0000000000030dcd                init_clock
 .text.__x86.get_pc_thunk.ax
                0x0000000000030e36        0x4 kernel/clock.o
                0x0000000000030e36                __x86.get_pc_thunk.ax
 .text          0x0000000000030e3a      0x749 kernel/keyboard.o
                0x0000000000030e3a                keyboard_handler
                0x0000000000030eb3                init_keyboard
                0x0000000000030f73                keyboard_read
 .text          0x0000000000031583      0x58e kernel/tty.o
                0x0000000000031583                task_tty
                0x000000000003166b                in_process
                0x00000000000318e2                tty_write
                0x0000000000031937                sys_printx
 .text          0x0000000000031b11      0x49d kernel/console.o
                0x0000000000031b11                init_screen
                0x0000000000031c4c                is_current_console
                0x0000000000031c77                out_char
                0x0000000000031ef3                select_console
                0x0000000000031f39                scroll_screen
 .text.__x86.get_pc_thunk.cx
                0x0000000000031fae        0x4 kernel/console.o
                0x0000000000031fae                __x86.get_pc_thunk.cx
 .text          0x0000000000031fb2      0x167 kernel/i8259.o
                0x0000000000031fb2                init_8259A
                0x000000000003209a                spurious_irq
                0x00000000000320e4                put_irq_handler
 .text          0x0000000000032119        0x0 kernel/global.o
 .text          0x0000000000032119      0x6c7 kernel/protect.o
                0x0000000000032119                init_prot
                0x00000000000325b6                seg2phys
                0x0000000000032689                exception_handler
 .text          0x00000000000327e0     0x19f7 kernel/proc.o
                0x00000000000327e0                schedule
                0x0000000000032894                sys_sendrec
                0x00000000000329db                send_recv
                0x0000000000032aad                ldt_seg_linear
                0x0000000000032afa                va2la
                0x0000000000032b73                reset_msg
                0x0000000000033b1e                inform_int
                0x0000000000033cca                dump_proc
                0x00000000000340a6                dump_msg
 .text.__x86.get_pc_thunk.dx
                0x00000000000341d7        0x4 kernel/proc.o
                0x00000000000341d7                __x86.get_pc_thunk.dx
 .text          0x00000000000341db       0x69 kernel/systask.o
                0x00000000000341db                task_sys
 .text          0x0000000000034244      0xabb kernel/hd.o
                0x0000000000034244                hd_handler
                0x000000000003427f                task_hd
 .text          0x0000000000034cff       0x5f kernel/printf.o
                0x0000000000034cff                printf
 .text          0x0000000000034d5e      0x330 kernel/vsprintf.o
                0x0000000000034dce                vsprintf
                0x000000000003505e                sprintf
 *fill*         0x000000000003508e        0x2 
 .text          0x0000000000035090      0x1d6 lib/kliba.o
                0x0000000000035090                disp_str
                0x00000000000350d6                disp_color_str
                0x000000000003511d                out_byte
                0x000000000003512f                in_byte
                0x000000000003513e                port_read
                0x0000000000035158                port_write
                0x0000000000035172                disable_irq
                0x00000000000351b0                enable_irq
                0x00000000000351d9                disable_int
                0x00000000000351db                enable_int
                0x00000000000351dd                glitter
 .text          0x0000000000035266       0xeb lib/klib.o
                0x0000000000035266                itoa
                0x000000000003531b                disp_int
 *fill*         0x0000000000035351        0xf 
 .text          0x0000000000035360       0x7a lib/string.o
                0x0000000000035360                memcpy
                0x0000000000035387                memset
                0x00000000000353a6                strcpy
                0x00000000000353c2                strlen
 .text          0x00000000000353da       0x76 lib/misc.o
                0x00000000000353da                spin
                0x0000000000035404                assertion_failure
 .text          0x0000000000035450       0x92 fs/main.o
                0x0000000000035450                task_fs
 *(.gnu.warning)

.fini
 *(SORT_NONE(.fini))
                [!provide]                        PROVIDE (__etext = .)
                [!provide]                        PROVIDE (_etext = .)
                [!provide]                        PROVIDE (etext = .)

.rodata         0x0000000000035500      0xf58
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata        0x0000000000035500       0x47 kernel/start.o
 *fill*         0x0000000000035547        0x1 
 .rodata        0x0000000000035548       0x54 kernel/main.o
 .rodata        0x000000000003559c       0x64 kernel/keyboard.o
 .rodata        0x0000000000035600       0x90 kernel/tty.o
 .rodata        0x0000000000035690       0x11 kernel/i8259.o
 *fill*         0x00000000000356a1        0x3 
 .rodata        0x00000000000356a4        0x4 kernel/global.o
                0x00000000000356a4                FSBUF_SIZE
 *fill*         0x00000000000356a8       0x18 
 .rodata        0x00000000000356c0      0x540 kernel/protect.o
 .rodata        0x0000000000035c00      0x632 kernel/proc.o
 .rodata        0x0000000000036232       0x11 kernel/systask.o
 *fill*         0x0000000000036243        0x1 
 .rodata        0x0000000000036244      0x156 kernel/hd.o
 *fill*         0x000000000003639a        0x2 
 .rodata        0x000000000003639c       0x61 lib/misc.o
 *fill*         0x00000000000363fd        0x3 
 .rodata        0x0000000000036400       0x58 fs/main.o

.rodata1
 *(.rodata1)

.eh_frame_hdr
 *(.eh_frame_hdr)
 *(.eh_frame_entry .eh_frame_entry.*)

.eh_frame       0x0000000000036458      0xb00
 *(.eh_frame)
 .eh_frame      0x0000000000036458       0x50 kernel/start.o
 .eh_frame      0x00000000000364a8       0xb8 kernel/main.o
                                         0xe4 (松开之前的大小)
 .eh_frame      0x0000000000036560       0x80 kernel/clock.o
                                         0xac (松开之前的大小)
 .eh_frame      0x00000000000365e0       0xfc kernel/keyboard.o
                                        0x128 (松开之前的大小)
 .eh_frame      0x00000000000366dc      0x114 kernel/tty.o
                                        0x154 (松开之前的大小)
 .eh_frame      0x00000000000367f0      0x120 kernel/console.o
                                        0x160 (松开之前的大小)
 .eh_frame      0x0000000000036910       0x6c kernel/i8259.o
                                         0x98 (松开之前的大小)
 .eh_frame      0x000000000003697c       0xb8 kernel/protect.o
                                         0xf8 (松开之前的大小)
 .eh_frame      0x0000000000036a34      0x220 kernel/proc.o
                                        0x260 (松开之前的大小)
 .eh_frame      0x0000000000036c54       0x1c kernel/systask.o
                                         0x48 (松开之前的大小)
 .eh_frame      0x0000000000036c70      0x1b4 kernel/hd.o
                                        0x1f4 (松开之前的大小)
 .eh_frame      0x0000000000036e24       0x24 kernel/printf.o
                                         0x50 (松开之前的大小)
 .eh_frame      0x0000000000036e48       0x68 kernel/vsprintf.o
                                         0xa8 (松开之前的大小)
 .eh_frame      0x0000000000036eb0       0x44 lib/klib.o
                                         0x84 (松开之前的大小)
 .eh_frame      0x0000000000036ef4       0x40 lib/misc.o
                                         0x80 (松开之前的大小)
 .eh_frame      0x0000000000036f34       0x24 fs/main.o
                                         0x50 (松开之前的大小)
 *(.eh_frame.*)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.gnu_extab
 *(.gnu_extab*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)
                0x0000000000038000                . = DATA_SEGMENT_ALIGN (CONSTANT (MAXPAGESIZE), CONSTANT (COMMONPAGESIZE))

.eh_frame
 *(.eh_frame)
 *(.eh_frame.*)

.gnu_extab
 *(.gnu_extab)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)

.tdata
 *(.tdata .tdata.* .gnu.linkonce.td.*)

.tbss
 *(.tbss .tbss.* .gnu.linkonce.tb.*)
 *(.tcommon)

.preinit_array  0x0000000000038000        0x0
                [!provide]                        PROVIDE (__preinit_array_start = .)
 *(.preinit_array)
                [!provide]                        PROVIDE (__preinit_array_end = .)

.init_array     0x0000000000038000        0x0
                [!provide]                        PROVIDE (__init_array_start = .)
 *(SORT_BY_INIT_PRIORITY(.init_array.*) SORT_BY_INIT_PRIORITY(.ctors.*))
 *(.init_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .ctors)
                [!provide]                        PROVIDE (__init_array_end = .)

.fini_array     0x0000000000038000        0x0
                [!provide]                        PROVIDE (__fini_array_start = .)
 *(SORT_BY_INIT_PRIORITY(.fini_array.*) SORT_BY_INIT_PRIORITY(.dtors.*))
 *(.fini_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .dtors)
                [!provide]                        PROVIDE (__fini_array_end = .)

.ctors
 *crtbegin.o(.ctors)
 *crtbegin?.o(.ctors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .ctors)
 *(SORT_BY_NAME(.ctors.*))
 *(.ctors)

.dtors
 *crtbegin.o(.dtors)
 *crtbegin?.o(.dtors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .dtors)
 *(SORT_BY_NAME(.dtors.*))
 *(.dtors)

.jcr
 *(.jcr)

.data.rel.ro
 *(.data.rel.ro.local* .gnu.linkonce.d.rel.ro.local.*)
 *(.data.rel.ro .data.rel.ro.* .gnu.linkonce.d.rel.ro.*)

.dynamic
 *(.dynamic)

.got            0x0000000000038000        0x0
 *(.got)
 .got           0x0000000000038000        0x0 kernel/kernel.o
 *(.igot)
                0x0000000000038ff4                . = DATA_SEGMENT_RELRO_END (., (SIZEOF (.got.plt) >= 0xc)?0xc:0x0)

.got.plt        0x0000000000038000        0xc
 *(.got.plt)
 .got.plt       0x0000000000038000        0xc kernel/kernel.o
                0x0000000000038000                _GLOBAL_OFFSET_TABLE_
 *(.igot.plt)
 .igot.plt      0x000000000003800c        0x0 kernel/kernel.o

.data           0x0000000000038020      0x764
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x0000000000038020        0x2 kernel/kernel.o
 .data          0x0000000000038022        0x0 kernel/start.o
 .data          0x0000000000038022        0x0 kernel/main.o
 .data          0x0000000000038022        0x0 kernel/clock.o
 *fill*         0x0000000000038022       0x1e 
 .data          0x0000000000038040      0x600 kernel/keyboard.o
                0x0000000000038040                keymap
 .data          0x0000000000038640        0x0 kernel/tty.o
 .data          0x0000000000038640        0x0 kernel/console.o
 .data          0x0000000000038640        0x0 kernel/i8259.o
 .data          0x0000000000038640       0x1c kernel/global.o
                0x0000000000038640                dd_map
                0x0000000000038658                fsbuf
 *fill*         0x000000000003865c        0x4 
 .data.rel      0x0000000000038660      0x124 kernel/global.o
                0x0000000000038660                task_table
                0x0000000000038700                user_proc_table
                0x0000000000038778                sys_call_table
 .data          0x0000000000038784        0x0 kernel/protect.o
 .data          0x0000000000038784        0x0 kernel/proc.o
 .data          0x0000000000038784        0x0 kernel/systask.o
 .data          0x0000000000038784        0x0 kernel/hd.o
 .data          0x0000000000038784        0x0 kernel/printf.o
 .data          0x0000000000038784        0x0 kernel/vsprintf.o
 .data          0x0000000000038784        0x0 lib/klib.o
 .data          0x0000000000038784        0x0 lib/misc.o
 .data          0x0000000000038784        0x0 fs/main.o

.data1
 *(.data1)
                0x0000000000038784                _edata = .
                [!provide]                        PROVIDE (edata = .)
                0x0000000000038784                . = .
                0x0000000000038784                __bss_start = .

.bss            0x00000000000387a0    0x3acb8
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x00000000000387a0      0x800 kernel/kernel.o
 .bss           0x0000000000038fa0        0x0 kernel/start.o
 .bss           0x0000000000038fa0        0x0 kernel/main.o
 .bss           0x0000000000038fa0        0x0 kernel/clock.o
 .bss           0x0000000000038fa0       0x58 kernel/keyboard.o
 .bss           0x0000000000038ff8        0x0 kernel/tty.o
 .bss           0x0000000000038ff8        0x0 kernel/console.o
 .bss           0x0000000000038ff8        0x0 kernel/i8259.o
 .bss           0x0000000000038ff8        0x0 kernel/global.o
 .bss           0x0000000000038ff8        0x0 kernel/protect.o
 .bss           0x0000000000038ff8        0x0 kernel/proc.o
 .bss           0x0000000000038ff8        0x0 kernel/systask.o
 *fill*         0x0000000000038ff8        0x8 
 .bss           0x0000000000039000      0x64c kernel/hd.o
 .bss           0x000000000003964c        0x0 kernel/printf.o
 .bss           0x000000000003964c        0x0 kernel/vsprintf.o
 .bss           0x000000000003964c        0x0 lib/klib.o
 .bss           0x000000000003964c        0x0 lib/misc.o
 .bss           0x000000000003964c        0x0 fs/main.o
 *(COMMON)
 *fill*         0x000000000003964c       0x14 
 COMMON         0x0000000000039660    0x39de8 kernel/global.o
                0x0000000000039660                idt_ptr
                0x0000000000039680                task_stack
                0x0000000000071680                k_reenter
                0x00000000000716a0                gdt
                0x0000000000071aa0                tty_table
                0x00000000000726e0                tss
                0x0000000000072748                nr_current_console
                0x000000000007274c                disp_pos
                0x0000000000072750                gdt_ptr
                0x0000000000072760                idt
                0x0000000000072f60                ticks
                0x0000000000072f80                console_table
                0x0000000000072fc0                irq_table
                0x0000000000073000                p_proc_ready
                0x0000000000073020                proc_table
 COMMON         0x0000000000073448       0x10 kernel/hd.o
                0x0000000000073448                PARTITION_ENTRY
                0x0000000000073458                . = ALIGN ((. != 0x0)?0x4:0x1)
                0x0000000000073458                . = ALIGN (0x4)
                0x0000000000073458                . = SEGMENT_START ("ldata-segment", .)
                0x0000000000073458                . = ALIGN (0x4)
                0x0000000000073458                _end = .
                [!provide]                        PROVIDE (end = .)
                0x0000000000073458                . = DATA_SEGMENT_END (.)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x2b
 *(.comment)
 .comment       0x0000000000000000       0x2b kernel/start.o
                                         0x2c (松开之前的大小)
 .comment       0x000000000000002b       0x2c kernel/main.o
 .comment       0x000000000000002b       0x2c kernel/clock.o
 .comment       0x000000000000002b       0x2c kernel/keyboard.o
 .comment       0x000000000000002b       0x2c kernel/tty.o
 .comment       0x000000000000002b       0x2c kernel/console.o
 .comment       0x000000000000002b       0x2c kernel/i8259.o
 .comment       0x000000000000002b       0x2c kernel/global.o
 .comment       0x000000000000002b       0x2c kernel/protect.o
 .comment       0x000000000000002b       0x2c kernel/proc.o
 .comment       0x000000000000002b       0x2c kernel/systask.o
 .comment       0x000000000000002b       0x2c kernel/hd.o
 .comment       0x000000000000002b       0x2c kernel/printf.o
 .comment       0x000000000000002b       0x2c kernel/vsprintf.o
 .comment       0x000000000000002b       0x2c lib/klib.o
 .comment       0x000000000000002b       0x2c lib/misc.o
 .comment       0x000000000000002b       0x2c fs/main.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)

.debug_addr
 *(.debug_addr)

.gnu.attributes
 *(.gnu.attributes)

/DISCARD/
 *(.note.GNU-stack)
 *(.gnu_debuglink)
 *(.gnu.lto_*)
OUTPUT(kernel.bin elf32-i386)
